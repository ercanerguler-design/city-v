const { sql } = require('@vercel/postgres');
require('dotenv').config({ path: '.env.local' });

async function updateCrowdAnalysisTable() {
  try {
    console.log('üìä iot_crowd_analysis tablosu g√ºncelleniyor...\n');

    // Yeni s√ºtunlarƒ± ekle
    console.log('1Ô∏è‚É£ entry_count s√ºtunu ekleniyor...');
    await sql`ALTER TABLE iot_crowd_analysis ADD COLUMN IF NOT EXISTS entry_count INTEGER DEFAULT 0`;
    
    console.log('2Ô∏è‚É£ exit_count s√ºtunu ekleniyor...');
    await sql`ALTER TABLE iot_crowd_analysis ADD COLUMN IF NOT EXISTS exit_count INTEGER DEFAULT 0`;
    
    console.log('3Ô∏è‚É£ current_occupancy s√ºtunu ekleniyor...');
    await sql`ALTER TABLE iot_crowd_analysis ADD COLUMN IF NOT EXISTS current_occupancy INTEGER DEFAULT 0`;
    
    console.log('4Ô∏è‚É£ trend_direction s√ºtunu ekleniyor...');
    await sql`ALTER TABLE iot_crowd_analysis ADD COLUMN IF NOT EXISTS trend_direction VARCHAR(20) DEFAULT 'stable'`;
    
    console.log('5Ô∏è‚É£ movement_detected s√ºtunu ekleniyor...');
    await sql`ALTER TABLE iot_crowd_analysis ADD COLUMN IF NOT EXISTS movement_detected INTEGER DEFAULT 0`;
    
    console.log('6Ô∏è‚É£ detection_method s√ºtunu ekleniyor...');
    await sql`ALTER TABLE iot_crowd_analysis ADD COLUMN IF NOT EXISTS detection_method VARCHAR(50) DEFAULT 'ai_detection'`;
    
    console.log('\n‚úÖ Tablo ba≈üarƒ±yla g√ºncellendi!');
    console.log('\nYeni s√ºtunlar:');
    console.log('  - entry_count (giri≈ü sayƒ±sƒ±)');
    console.log('  - exit_count (√ßƒ±kƒ±≈ü sayƒ±sƒ±)');
    console.log('  - current_occupancy (mevcut doluluk)');
    console.log('  - trend_direction (trend: increasing/decreasing/stable)');
    console.log('  - movement_detected (hareket oranƒ± %)');
    console.log('  - detection_method (tespit y√∂ntemi)');
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Hata:', error.message);
    process.exit(1);
  }
}

updateCrowdAnalysisTable();
